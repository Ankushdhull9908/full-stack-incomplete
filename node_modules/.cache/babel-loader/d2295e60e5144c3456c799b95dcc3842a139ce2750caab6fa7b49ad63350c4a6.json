{"ast":null,"code":"var _jsxFileName = \"D:\\\\my_react_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport './Content.js';\nimport Content from './Content.js';\nimport Footer from './Footer.js';\nimport NavBar from './NavBar.js';\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport About from './About.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const toggleMode = () => {\n    if (modestyle === \"dark\") {\n      newmodestyle('light');\n      setBtnValue(\"Light Mode\");\n    } else {\n      newmodestyle('dark');\n      setBtnValue(\"Dark Mode\");\n    }\n  };\n  const [modestyle, newmodestyle] = useState(\"dark\");\n  const [btnValue, setBtnValue] = useState(\"Dark Mode\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        title: \"ankushDHULL\",\n        Home: \"Home\",\n        mode: modestyle,\n        toggle: toggleMode,\n        value: btnValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Content, {\n            mode: modestyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        about: \"About Me\",\n        mode: modestyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"v4r2vgMwoEJzYgxttnoXQMzNzt4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Content","Footer","NavBar","BrowserRouter","Routes","Route","Link","About","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","toggleMode","modestyle","newmodestyle","setBtnValue","btnValue","children","Router","title","Home","mode","toggle","value","fileName","_jsxFileName","lineNumber","columnNumber","Switch","path","about","_c","$RefreshReg$"],"sources":["D:/my_react_app/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport React,{useState} from 'react';\nimport './App.css';\nimport './Content.js'\nimport Content from './Content.js';\nimport Footer from './Footer.js';\nimport NavBar from './NavBar.js';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport About from './About.js';\n\nfunction App() {\n  const toggleMode = ()=>{\n    if(modestyle===\"dark\"){\n      newmodestyle('light')\n      \n      setBtnValue(\"Light Mode\")\n    }\n    else{\n      newmodestyle('dark')\n  \n      setBtnValue(\"Dark Mode\")\n    }\n    \n  }\n\n  const [modestyle,newmodestyle] = useState(\"dark\")\n  const [btnValue,setBtnValue] = useState(\"Dark Mode\")\n  return (\n    <>\n    <Router>\n      <NavBar title=\"ankushDHULL\" Home=\"Home\" mode={modestyle} toggle={toggleMode} value={btnValue}/>\n    \n      <Switch>\n        <Route path=\"/about\">\n        <About/>\n        </Route>\n        <Route path=\"/\">\n        <Content mode={modestyle}/>\n        </Route>\n    </Switch>\n    \n    <Footer about=\"About Me\" mode={modestyle}/>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,WAAW;AAClB,OAAO,cAAc;AACrB,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,MAAM,MAAM,aAAa;AAChC,SACEC,aAAa,EACbC,MAAM,EACNC,KAAK,EACLC,IAAI,QACC,kBAAkB;AACzB,OAAOC,KAAK,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGC,SAAS,KAAG,MAAM,EAAC;MACpBC,YAAY,CAAC,OAAO,CAAC;MAErBC,WAAW,CAAC,YAAY,CAAC;IAC3B,CAAC,MACG;MACFD,YAAY,CAAC,MAAM,CAAC;MAEpBC,WAAW,CAAC,WAAW,CAAC;IAC1B;EAEF,CAAC;EAED,MAAM,CAACF,SAAS,EAACC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,MAAM,CAAC;EACjD,MAAM,CAACmB,QAAQ,EAACD,WAAW,CAAC,GAAGlB,QAAQ,CAAC,WAAW,CAAC;EACpD,oBACEU,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACAV,OAAA,CAACW,MAAM;MAAAD,QAAA,gBACLV,OAAA,CAACP,MAAM;QAACmB,KAAK,EAAC,aAAa;QAACC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAER,SAAU;QAACS,MAAM,EAAEV,UAAW;QAACW,KAAK,EAAEP;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAE/FpB,OAAA,CAACqB,MAAM;QAAAX,QAAA,gBACLV,OAAA,CAACJ,KAAK;UAAC0B,IAAI,EAAC,QAAQ;UAAAZ,QAAA,eACpBV,OAAA,CAACF,KAAK;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACRpB,OAAA,CAACJ,KAAK;UAAC0B,IAAI,EAAC,GAAG;UAAAZ,QAAA,eACfV,OAAA,CAACT,OAAO;YAACuB,IAAI,EAAER;UAAU;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAETpB,OAAA,CAACR,MAAM;QAAC+B,KAAK,EAAC,UAAU;QAACT,IAAI,EAAER;MAAU;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC,gBACP,CAAC;AAEP;AAAChB,EAAA,CAnCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}