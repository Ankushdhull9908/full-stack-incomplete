{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react_app1Copy - Copy - Copy\\\\src\\\\DescriptionOfItems.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './DescriptionOfItems.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DescriptionOfItems(props) {\n  _s();\n  const modeStyle = {\n    backgroundColor: props.mode === 'dark' ? 'white' : 'grey'\n  };\n  const [comments, setComments] = useState([]); // State to store comments\n  const [newComment, setNewComment] = useState(''); // State to store new comment\n  const [isLoading, setIsLoading] = useState(true); // State to manage loading\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"userdata\");\n  const username = token ? JSON.parse(token) : null;\n  const {\n    id\n  } = useParams(); // Get ID from URL\n  const numericId = Number(id); // Convert ID to number\n\n  // Find the specific item by ID\n  const item = props.allItems.find(item => item.id === numericId);\n  useEffect(() => {\n    if (!props.allItems || props.allItems.length === 0) {\n      const fetchItemById = async () => {\n        try {\n          const response = await fetch(`http://localhost:7600/api/items/${numericId}`);\n          if (!response.ok) throw new Error('Network response was not ok');\n          const fetchedItem = await response.json();\n          setItem(fetchedItem); // Set the item in local state\n        } catch (error) {\n          console.error('Error fetching item:', error);\n        }\n      };\n      fetchItemById(); // Fetch the item data by ID\n    } else {\n      // If items are available in props, find the item by ID\n      const foundItem = props.allItems.find(item => item.id === numericId);\n      setItem(foundItem);\n    }\n  }, [numericId, props.allItems]);\n\n  // Fetch comments when the component is mounted or when `numericId` changes\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        setIsLoading(true); // Start loading\n        const response = await fetch(\"http://localhost:7600/allcomments\", {\n          method: \"GET\",\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json(); // Convert the response to JSON\n\n        // Check if the result is an array before setting it\n        if (Array.isArray(result)) {\n          setComments(result); // Set the comments state with the fetched data\n        } else {\n          console.error('Fetched comments data is not an array');\n        }\n      } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n      } finally {\n        setIsLoading(false); // Stop loading\n      }\n    };\n    if (numericId) {\n      fetchComments(); // Call the async function to fetch comments\n    }\n  }, [numericId]); // Add numericId as a dependency\n\n  // Filter comments by item ID\n  const filteredComments = comments.filter(comment => comment.itemId === numericId);\n\n  // Handle Add to Cart functionality\n  const handleAddToCart = () => {\n    let copyOfCart = [...props.cart]; // Create a copy of the cart\n    let existingItemIndex = copyOfCart.findIndex(cartItem => cartItem.id === item.id);\n    if (existingItemIndex !== -1) {\n      copyOfCart[existingItemIndex].quantity += 1; // Increase quantity\n      props.setCart(copyOfCart); // Update the cart state\n    } else {\n      const newItem = {\n        ...item,\n        quantity: 1\n      }; // Start quantity at 1\n      props.setCart([...copyOfCart, newItem]); // Add new item to cart\n    }\n  };\n\n  // Handle comment form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const commentData = {\n      name: username.user.name,\n      itemId: numericId,\n      // Use the numeric ID here\n      comment: newComment\n    };\n    try {\n      const response = await fetch(\"http://localhost:7600/comment\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(commentData)\n      });\n      if (response.ok) {\n        setNewComment(''); // Clear the comment input after successful submission\n        // fetchComments(); // Re-fetch the comments after adding a new one\n      } else {\n        throw new Error('Failed to post comment');\n      }\n    } catch (error) {\n      console.error('There was an error posting the comment:', error);\n    }\n  };\n\n  // Check if the item is found\n  if (!item) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Item not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Show a loading indicator if still fetching data\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: modeStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: item.Bigimage,\n      alt: item.name,\n      className: \"item-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"item-title\",\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-price\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 35\n        }, this), \" \\u20B9\", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-description\",\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-to-cart\",\n        onClick: handleAddToCart,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), item.specifications && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"specifications\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Specifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"specifications-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(item.specifications).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: Array.isArray(value) ? value.join(', ') : value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-list\",\n        children: filteredComments.length > 0 ? filteredComments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [comment.name, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this), \" \", comment.comment]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"views on:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 20\n            }, this), \" \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"comment-form\",\n        onSubmit: e => {\n          if (!username) {\n            alert(\"Please log in first\");\n            navigate(\"/form\");\n          } else {\n            handleSubmit(e);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: `Comment as ${!username ? \"user\" : username.user.name}`,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(DescriptionOfItems, \"UgPGg7g/58HU/G7RlB0Hl/SAX+Q=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = DescriptionOfItems;\nvar _c;\n$RefreshReg$(_c, \"DescriptionOfItems\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","DescriptionOfItems","props","_s","modeStyle","backgroundColor","mode","comments","setComments","newComment","setNewComment","isLoading","setIsLoading","navigate","token","localStorage","getItem","username","JSON","parse","id","numericId","Number","item","allItems","find","length","fetchItemById","response","fetch","ok","Error","fetchedItem","json","setItem","error","console","foundItem","fetchComments","method","headers","result","Array","isArray","filteredComments","filter","comment","itemId","handleAddToCart","copyOfCart","cart","existingItemIndex","findIndex","cartItem","quantity","setCart","newItem","handleSubmit","e","preventDefault","commentData","name","user","body","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","src","Bigimage","alt","price","description","onClick","specifications","Object","entries","map","key","value","charAt","toUpperCase","slice","join","index","onSubmit","alert","type","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["D:/React/react_app1Copy - Copy - Copy/src/DescriptionOfItems.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './DescriptionOfItems.css'; // Import the CSS file\r\n\r\nexport default function DescriptionOfItems(props) {\r\n  const modeStyle = {\r\n    backgroundColor: props.mode === 'dark' ? 'white' : 'grey',\r\n  };\r\n\r\n  const [comments, setComments] = useState([]); // State to store comments\r\n  const [newComment, setNewComment] = useState(''); // State to store new comment\r\n  const [isLoading, setIsLoading] = useState(true); // State to manage loading\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem(\"userdata\");\r\n  const username = token ? JSON.parse(token) : null;\r\n  const {id} = useParams(); // Get ID from URL\r\n  const numericId = Number(id); // Convert ID to number\r\n\r\n  // Find the specific item by ID\r\n  const item = props.allItems.find((item) => item.id === numericId);\r\n\r\n  useEffect(() => {\r\n    if (!props.allItems || props.allItems.length === 0) {\r\n      const fetchItemById = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:7600/api/items/${numericId}`);\r\n          if (!response.ok) throw new Error('Network response was not ok');\r\n          const fetchedItem = await response.json();\r\n          setItem(fetchedItem); // Set the item in local state\r\n        } catch (error) {\r\n          console.error('Error fetching item:', error);\r\n        }\r\n      };\r\n      fetchItemById(); // Fetch the item data by ID\r\n    } else {\r\n      // If items are available in props, find the item by ID\r\n      const foundItem = props.allItems.find((item) => item.id === numericId);\r\n      setItem(foundItem);\r\n    }\r\n  }, [numericId, props.allItems]);\r\n\r\n  // Fetch comments when the component is mounted or when `numericId` changes\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        setIsLoading(true); // Start loading\r\n        const response = await fetch(\"http://localhost:7600/allcomments\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const result = await response.json(); // Convert the response to JSON\r\n\r\n        // Check if the result is an array before setting it\r\n        if (Array.isArray(result)) {\r\n          setComments(result); // Set the comments state with the fetched data\r\n        } else {\r\n          console.error('Fetched comments data is not an array');\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n      } finally {\r\n        setIsLoading(false); // Stop loading\r\n      }\r\n    };\r\n\r\n    if (numericId) {\r\n      fetchComments(); // Call the async function to fetch comments\r\n    }\r\n  }, [numericId]); // Add numericId as a dependency\r\n\r\n  // Filter comments by item ID\r\n  const filteredComments = comments.filter((comment) => comment.itemId === numericId);\r\n  \r\n  // Handle Add to Cart functionality\r\n  const handleAddToCart = () => {\r\n    let copyOfCart = [...props.cart]; // Create a copy of the cart\r\n    let existingItemIndex = copyOfCart.findIndex((cartItem) => cartItem.id === item.id);\r\n\r\n    if (existingItemIndex !== -1) {\r\n      copyOfCart[existingItemIndex].quantity += 1; // Increase quantity\r\n      props.setCart(copyOfCart); // Update the cart state\r\n    } else {\r\n      const newItem = { ...item, quantity: 1 }; // Start quantity at 1\r\n      props.setCart([...copyOfCart, newItem]); // Add new item to cart\r\n    }\r\n  };\r\n\r\n  // Handle comment form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const commentData = {\r\n      name: username.user.name,\r\n      itemId: numericId, // Use the numeric ID here\r\n      comment: newComment,\r\n    };\r\n    \r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:7600/comment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(commentData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setNewComment(''); // Clear the comment input after successful submission\r\n       // fetchComments(); // Re-fetch the comments after adding a new one\r\n      } else {\r\n        throw new Error('Failed to post comment');\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error posting the comment:', error);\r\n    }\r\n    \r\n  };\r\n\r\n  // Check if the item is found\r\n  if (!item) {\r\n    return <h2>Item not found</h2>;\r\n  }\r\n\r\n  // Show a loading indicator if still fetching data\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={modeStyle}>\r\n      <img src={item.Bigimage} alt={item.name} className=\"item-image\" />\r\n      <div className=\"item-details\">\r\n        <h1 className=\"item-title\">{item.name}</h1>\r\n        <p className=\"item-price\"><strong>Price:</strong> ₹{item.price}</p>\r\n        <p className=\"item-description\">{item.description}</p>\r\n        <button className=\"add-to-cart\" onClick={handleAddToCart}>\r\n          Add to Cart\r\n        </button>\r\n\r\n        {item.specifications && (\r\n          <div className=\"specifications\">\r\n            <h2>Specifications</h2>\r\n            <table className=\"specifications-table\">\r\n              <tbody>\r\n                {Object.entries(item.specifications).map(([key, value]) => (\r\n                  <tr key={key}>\r\n                    <td>{key.charAt(0).toUpperCase() + key.slice(1)}:</td>\r\n                    <td>{Array.isArray(value) ? value.join(', ') : value}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Comment Section */}\r\n      <div className=\"comments-section\">\r\n\r\n        <h2>Reviews</h2>\r\n\r\n        {/* Display comments */}\r\n        <div className=\"comments-list\">\r\n          {filteredComments.length > 0 ? (\r\n            filteredComments.map((comment, index) => (\r\n              <div key={index} className=\"comment\">\r\n                 <p><b>{comment.name}:</b> {comment.comment}</p>\r\n                <p><i>views on:</i> {item.name}</p>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No comments yet.</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Comment Form */}\r\n        <form\r\n          className=\"comment-form\"\r\n          onSubmit={(e) => {\r\n            if (!username) {\r\n              alert(\"Please log in first\");\r\n              navigate(\"/form\");\r\n            } else {\r\n              handleSubmit(e);\r\n            }\r\n          }}\r\n        >\r\n          <input type='text'\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder={`Comment as ${!username?\"user\":username.user.name}`}\r\n            \r\n            \r\n            required\r\n          />\r\n          <button type=\"submit\">Submit Comment</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}