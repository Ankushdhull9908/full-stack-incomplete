{"ast":null,"code":"var _jsxFileName = \"D:\\\\my_react_app\\\\src\\\\Content.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Content() {\n  _s();\n  const mystle = {\n    backgroundColor: \"red\"\n  };\n  const fun = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const changeFunction = event => {\n    setText(event.target.value);\n  };\n  const toggleBtn = () => {\n    if (btnText == \"Dark Mode\") {\n      BtnSetText(\"Light Mode\");\n    } else {\n      BtnSetText(\"Dark Mode\");\n    }\n  };\n  const [text, setText] = useState(\"Enter Text\");\n  const [btnText, BtnSetText] = useState(\"Light Mode\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dark-light-mode\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"darkbtn\",\n        onClick: toggleBtn,\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MainContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        cols: 50,\n        rows: 8,\n        onChange: changeFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cnvrtBtn\",\n        onClick: fun,\n        children: \"Convert To UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Content, \"zDaiXF2g05kt0RRiXKtmjilJEas=\");\n_c = Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Content","_s","mystle","backgroundColor","fun","newText","text","toUpperCase","setText","changeFunction","event","target","value","toggleBtn","btnText","BtnSetText","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","cols","rows","onChange","_c","$RefreshReg$"],"sources":["D:/my_react_app/src/Content.js"],"sourcesContent":["import React ,{useState}from 'react'\r\n\r\nexport default function Content() {\r\n\r\n    const mystle = {\r\n      backgroundColor : \"red\"\r\n    }\r\n    const fun = ()=>{\r\n          let newText = text.toUpperCase()\r\n          setText(newText)\r\n    }\r\n\r\n    const changeFunction =(event)=>{\r\n        setText(event.target.value)\r\n        \r\n    }\r\n\r\n    const toggleBtn = ()=>{\r\n      if(btnText==\"Dark Mode\"){\r\n        BtnSetText(\"Light Mode\")\r\n      }\r\n      else{\r\n        BtnSetText(\"Dark Mode\")\r\n      }\r\n      \r\n    }\r\n\r\n    const [text,setText] = useState(\"Enter Text\")\r\n    const [btnText,BtnSetText] = useState(\"Light Mode\")\r\n  return (\r\n    <div className='main'>\r\n      <div className=\"dark-light-mode\">\r\n       <button className='darkbtn' onClick={toggleBtn}>{btnText}</button>\r\n      </div>\r\n    <div className='MainContent'>\r\n    <textarea value={text} cols={50} rows={8} onChange={changeFunction}/>\r\n    <button className=\"cnvrtBtn\" onClick={fun}>Convert To UpperCase</button>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAE9B,MAAMC,MAAM,GAAG;IACbC,eAAe,EAAG;EACpB,CAAC;EACD,MAAMC,GAAG,GAAGA,CAAA,KAAI;IACV,IAAIC,OAAO,GAAGC,IAAI,CAACC,WAAW,CAAC,CAAC;IAChCC,OAAO,CAACH,OAAO,CAAC;EACtB,CAAC;EAED,MAAMI,cAAc,GAAGC,KAAK,IAAG;IAC3BF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAE/B,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAI;IACpB,IAAGC,OAAO,IAAE,WAAW,EAAC;MACtBC,UAAU,CAAC,YAAY,CAAC;IAC1B,CAAC,MACG;MACFA,UAAU,CAAC,WAAW,CAAC;IACzB;EAEF,CAAC;EAED,MAAM,CAACT,IAAI,EAACE,OAAO,CAAC,GAAGX,QAAQ,CAAC,YAAY,CAAC;EAC7C,MAAM,CAACiB,OAAO,EAACC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,YAAY,CAAC;EACrD,oBACEE,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBlB,OAAA;MAAKiB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC/BlB,OAAA;QAAQiB,SAAS,EAAC,SAAS;QAACE,OAAO,EAAEL,SAAU;QAAAI,QAAA,EAAEH;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACRvB,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC5BlB,OAAA;QAAUa,KAAK,EAAEN,IAAK;QAACiB,IAAI,EAAE,EAAG;QAACC,IAAI,EAAE,CAAE;QAACC,QAAQ,EAAEhB;MAAe;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACrEvB,OAAA;QAAQiB,SAAS,EAAC,UAAU;QAACE,OAAO,EAAEd,GAAI;QAAAa,QAAA,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAGV;AAACrB,EAAA,CAxCuBD,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}