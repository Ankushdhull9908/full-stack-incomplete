{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react_app1Copy - Copy - Copy\\\\src\\\\DescriptionOfItems.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport items from './ItemList';\nimport './DescriptionOfItems.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DescriptionOfItems(props) {\n  _s();\n  const modeStyle = {\n    backgroundColor: props.mode === 'dark' ? 'white' : 'grey'\n  };\n  const {\n    id\n  } = useParams();\n  const item = items.findIndex(item => item.id === parseInt(id));\n\n  /*if (!item) {\r\n    return <h2>Item not found</h2>;\r\n  }\r\n    const handleAddToCart = () => {\r\n    let CopyOfCart = [...props.cart]; // Create a copy of the cart\r\n    let ExistingItemIndex = CopyOfCart.findIndex((Cartitem) => {\r\n        return Cartitem.id === item.id; // Check for the item's existence\r\n    });\r\n      if (ExistingItemIndex !== -1) { // Check if item exists\r\n        CopyOfCart[ExistingItemIndex].quantity += 1; // Increase quantity\r\n        props.setCart(CopyOfCart); // Update the cart state\r\n    } else {\r\n        const newItem = { ...item, quantity: 1 }; // Start quantity at 1\r\n        props.setCart([...CopyOfCart, newItem]); // Add new item to cart\r\n    }\r\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: modeStyle,\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: items[item]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(DescriptionOfItems, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = DescriptionOfItems;\nvar _c;\n$RefreshReg$(_c, \"DescriptionOfItems\");","map":{"version":3,"names":["React","useParams","items","jsxDEV","_jsxDEV","DescriptionOfItems","props","_s","modeStyle","backgroundColor","mode","id","item","findIndex","parseInt","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/react_app1Copy - Copy - Copy/src/DescriptionOfItems.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport items from './ItemList';\r\nimport './DescriptionOfItems.css'; // Import the CSS file\r\n\r\n\r\nexport default function DescriptionOfItems(props) {\r\n  const modeStyle = {\r\n    backgroundColor: props.mode === 'dark' ? 'white' : 'grey',\r\n  };\r\n  \r\n  const { id } = useParams();\r\n  const item = items.findIndex((item) => item.id === parseInt(id));\r\n\r\n  /*if (!item) {\r\n    return <h2>Item not found</h2>;\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n    let CopyOfCart = [...props.cart]; // Create a copy of the cart\r\n    let ExistingItemIndex = CopyOfCart.findIndex((Cartitem) => {\r\n        return Cartitem.id === item.id; // Check for the item's existence\r\n    });\r\n\r\n    if (ExistingItemIndex !== -1) { // Check if item exists\r\n        CopyOfCart[ExistingItemIndex].quantity += 1; // Increase quantity\r\n        props.setCart(CopyOfCart); // Update the cart state\r\n    } else {\r\n        const newItem = { ...item, quantity: 1 }; // Start quantity at 1\r\n        props.setCart([...CopyOfCart, newItem]); // Add new item to cart\r\n    }\r\n};*/\r\n\r\n\r\n  return (\r\n    <div className=\"container\" style={modeStyle}>\r\n      \r\n      {/*<img src={item.Bigimage} alt={item.name} className=\"item-image\" />\r\n      <div className=\"item-details\">\r\n        <h1 className=\"item-title\">{item.name}</h1>\r\n        <p className=\"item-price\"><strong>Price:</strong> â‚¹{item.price}</p>\r\n        <p className=\"item-description\">{item.description}</p>\r\n        <button className=\"add-to-cart\" onClick={()=>{\r\n          handleAddToCart()\r\n        }}>\r\n          Add to Cart\r\n        </button>\r\n\r\n        {item.specifications && (\r\n          <div className=\"specifications\">\r\n            <h2>Specifications</h2>\r\n            <table className=\"specifications-table\">\r\n              <tbody>\r\n                {Object.entries(item.specifications).map(([key, value]) => (\r\n                  <tr key={key}>\r\n                    <td>{key.charAt(0).toUpperCase()+ key.slice(1)}:</td>\r\n                    <td>{Array.isArray(value) ? value.join(', ') : value}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>*/}\r\n      <h1>{items[item]}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAO,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnC,eAAe,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAChD,MAAMC,SAAS,GAAG;IAChBC,eAAe,EAAEH,KAAK,CAACI,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG;EACrD,CAAC;EAED,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,IAAI,GAAGV,KAAK,CAACW,SAAS,CAAED,IAAI,IAAKA,IAAI,CAACD,EAAE,KAAKG,QAAQ,CAACH,EAAE,CAAC,CAAC;;EAEhE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKE,oBACEP,OAAA;IAAKW,SAAS,EAAC,WAAW;IAACC,KAAK,EAAER,SAAU;IAAAS,QAAA,eA6B1Cb,OAAA;MAAAa,QAAA,EAAKf,KAAK,CAACU,IAAI;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACd,EAAA,CA7DuBF,kBAAkB;EAAA,QAKzBJ,SAAS;AAAA;AAAAqB,EAAA,GALFjB,kBAAkB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}