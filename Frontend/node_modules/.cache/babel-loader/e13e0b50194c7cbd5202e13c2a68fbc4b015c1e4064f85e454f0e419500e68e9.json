{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react_app1Copy - Copy - Copy\\\\src\\\\DescriptionOfItems.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './DescriptionOfItems.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DescriptionOfItems(props) {\n  _s();\n  const modeStyle = {\n    backgroundColor: props.mode === 'dark' ? 'white' : 'grey'\n  };\n  const [comments, setComments] = useState([]); // State to store comments\n  const [newComment, setNewComment] = useState(''); // State to store new comment\n  const [isLoading, setIsLoading] = useState(true); // State to manage loading\n  const [item, setItem] = useState(null); // State to store the current item\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"userdata\");\n  const username = token ? JSON.parse(token) : null;\n  const {\n    id\n  } = useParams(); // Get ID from URL\n  const numericId = Number(id); // Convert ID to number\n\n  // Fetch the specific item by ID if it's not available in props.allItems\n  useEffect(() => {\n    if (props.allItems.length > 0) {\n      // If items are already available in props, find the item\n      const foundItem = props.allItems.find(item => item.id === numericId);\n      setItem(foundItem);\n    } else {\n      // If props.allItems is empty, fetch the specific item data\n      const fetchItemById = async () => {\n        try {\n          const response = await fetch(`http://localhost:7600/api/items/${numericId}`);\n          if (!response.ok) {\n            throw new Error('Item not found');\n          }\n          const itemData = await response.json();\n          setItem(itemData);\n        } catch (error) {\n          console.error('Error fetching item:', error);\n        }\n      };\n      fetchItemById();\n    }\n  }, [props.allItems, numericId]);\n\n  // Fetch comments when the component is mounted or when `numericId` changes\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        setIsLoading(true); // Start loading\n        const response = await fetch(\"http://localhost:7600/allcomments\", {\n          method: \"GET\",\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json(); // Convert the response to JSON\n\n        // Check if the result is an array before setting it\n        if (Array.isArray(result)) {\n          setComments(result); // Set the comments state with the fetched data\n        } else {\n          console.error('Fetched comments data is not an array');\n        }\n      } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n      } finally {\n        setIsLoading(false); // Stop loading\n      }\n    };\n    if (numericId) {\n      fetchComments(); // Call the async function to fetch comments\n    }\n  }, [numericId]);\n\n  // Filter comments by item ID\n\n  useEffect(() => {}, [comments]);\n  const filteredComments = comments.filter(comment => comment.itemId === numericId);\n  console.log(filteredComments);\n\n  // Handle Add to Cart functionality\n  const handleAddToCart = () => {\n    /* let copyOfCart = [...props.cart]; // Create a copy of the cart\r\n     let existingItemIndex = copyOfCart.findIndex((cartItem) => cartItem.id === item.id);\r\n       if (existingItemIndex !== -1) {\r\n       copyOfCart[existingItemIndex].quantity += 1; // Increase quantity\r\n       props.setCart(copyOfCart); // Update the cart state\r\n     } else {\r\n       const newItem = { ...item, quantity: 1 }; // Start quantity at 1\r\n       props.setCart([...copyOfCart, newItem]); // Add new item to cart\r\n     }*/\n    if (!username) {\n      alert(\"please login first\");\n      navigate(\"/form\");\n    } else {\n      const itemData = {\n        itemId: item.id,\n        itemUrl: item.url,\n        itemDescription: item.description,\n        itemName: item.name,\n        itemQuantity: item.quantity,\n        itemPrice: item.price,\n        itemOwnerEmail: username.user.name\n      };\n      console.log(itemData);\n      try {\n        const res = fetch(\"http://localhost:7600/api/addToCart\", {\n          method: \"POST\",\n          // Ensure the method is POST\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(itemData)\n        }); // Semicolon added here\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  // Handle comment form submission\n  const handleSubmit = async e => {\n    const like = 0;\n    e.preventDefault();\n    const commentData = {\n      name: username.user.name,\n      itemId: numericId,\n      // Use the numeric ID here\n      comment: newComment,\n      numberoflikes: like\n    };\n    console.log(commentData);\n    try {\n      const response = await fetch(\"http://localhost:7600/comment\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(commentData)\n      });\n      if (response.ok) {\n        setNewComment(''); // Clear the comment input after successful submission\n        // fetchComments(); // Re-fetch the comments after adding a new one\n      } else {\n        throw new Error('Failed to post comment');\n      }\n    } catch (error) {\n      console.error('There was an error posting the comment:', error);\n    }\n  };\n\n  // Show a loading indicator if still fetching data\n  if (!item) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading item...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 12\n    }, this);\n  }\n  function deletecomment(index) {\n    const deletecommentdata = {\n      comment: filteredComments[index].comment,\n      username: filteredComments[index].name\n    };\n    try {\n      fetch('http://localhost:7600/deletecomment', {\n        method: \"Post\",\n        headers: {\n          'Content-type': 'Application/json'\n        },\n        body: JSON.stringify(deletecommentdata)\n      });\n      alert(\"comment deleted\");\n    } catch (error) {}\n  }\n  function giveLike(index) {\n    alert(filteredComments[index]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: modeStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: item.Bigimage,\n      alt: item.name,\n      className: \"item-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"item-title\",\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-price\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 35\n        }, this), \" \\u20B9\", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-description\",\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-to-cart\",\n        onClick: handleAddToCart,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), item.specifications && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"specifications\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Specifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"specifications-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(item.specifications).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: Array.isArray(value) ? value.join(', ') : value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-list\",\n        children: filteredComments.length > 0 ? filteredComments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [comment.name, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 20\n            }, this), \" \", comment.comment]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"viewson\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"views on:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this), \" \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), comment.name === username.user.name ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deletecomment(index);\n            },\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 53\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 38\n          }, this), comment.name === username.user.name ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 55\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              giveLike(index);\n            },\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 63\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.numberoflikes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"comment-form\",\n        onSubmit: e => {\n          if (!username) {\n            alert(\"Please log in first\");\n            navigate(\"/form\");\n          } else {\n            handleSubmit(e);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: `Comment as ${!username ? \"user\" : username.user.name}`,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(DescriptionOfItems, \"mCxtEhJB3dJRG5vLeNm1Ziw9SdE=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = DescriptionOfItems;\nvar _c;\n$RefreshReg$(_c, \"DescriptionOfItems\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","DescriptionOfItems","props","_s","modeStyle","backgroundColor","mode","comments","setComments","newComment","setNewComment","isLoading","setIsLoading","item","setItem","navigate","token","localStorage","getItem","username","JSON","parse","id","numericId","Number","allItems","length","foundItem","find","fetchItemById","response","fetch","ok","Error","itemData","json","error","console","fetchComments","method","headers","result","Array","isArray","filteredComments","filter","comment","itemId","log","handleAddToCart","alert","itemUrl","url","itemDescription","description","itemName","name","itemQuantity","quantity","itemPrice","price","itemOwnerEmail","user","res","body","stringify","handleSubmit","e","like","preventDefault","commentData","numberoflikes","children","fileName","_jsxFileName","lineNumber","columnNumber","deletecomment","index","deletecommentdata","giveLike","className","style","src","Bigimage","alt","onClick","specifications","Object","entries","map","key","value","charAt","toUpperCase","slice","join","onSubmit","type","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["D:/React/react_app1Copy - Copy - Copy/src/DescriptionOfItems.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './DescriptionOfItems.css'; // Import the CSS file\r\n\r\nexport default function DescriptionOfItems(props) {\r\n  const modeStyle = {\r\n    backgroundColor: props.mode === 'dark' ? 'white' : 'grey',\r\n  };\r\n\r\n  const [comments, setComments] = useState([]); // State to store comments\r\n  const [newComment, setNewComment] = useState(''); // State to store new comment\r\n  const [isLoading, setIsLoading] = useState(true); // State to manage loading\r\n  const [item, setItem] = useState(null); // State to store the current item\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem(\"userdata\");\r\n  const username = token ? JSON.parse(token) : null;\r\n  const { id } = useParams(); // Get ID from URL\r\n  const numericId = Number(id); // Convert ID to number\r\n\r\n  // Fetch the specific item by ID if it's not available in props.allItems\r\n  useEffect(() => {\r\n    if (props.allItems.length > 0) {\r\n      // If items are already available in props, find the item\r\n      const foundItem = props.allItems.find((item) => item.id === numericId);\r\n      setItem(foundItem);\r\n    } else {\r\n      // If props.allItems is empty, fetch the specific item data\r\n      const fetchItemById = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:7600/api/items/${numericId}`);\r\n          if (!response.ok) {\r\n            throw new Error('Item not found');\r\n          }\r\n          const itemData = await response.json();\r\n          \r\n          setItem(itemData);\r\n         \r\n        } catch (error) {\r\n          console.error('Error fetching item:', error);\r\n        }\r\n      };\r\n\r\n      fetchItemById();\r\n    }\r\n  }, [props.allItems, numericId]);\r\n\r\n  // Fetch comments when the component is mounted or when `numericId` changes\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        setIsLoading(true); // Start loading\r\n        const response = await fetch(\"http://localhost:7600/allcomments\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const result = await response.json(); // Convert the response to JSON\r\n\r\n        // Check if the result is an array before setting it\r\n        if (Array.isArray(result)) {\r\n          setComments(result); // Set the comments state with the fetched data\r\n        } else {\r\n          console.error('Fetched comments data is not an array');\r\n        }\r\n      } catch (error) {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n      } finally {\r\n        setIsLoading(false); // Stop loading\r\n      }\r\n    };\r\n\r\n    if (numericId) {\r\n      fetchComments(); // Call the async function to fetch comments\r\n    }\r\n  }, [numericId]);\r\n\r\n  // Filter comments by item ID\r\n\r\n  useEffect(()=>{\r\n    \r\n  },[comments])\r\n  const filteredComments = comments.filter((comment) => comment.itemId === numericId);\r\n  console.log(filteredComments)\r\n  \r\n  // Handle Add to Cart functionality\r\n  const handleAddToCart = () => {\r\n   /* let copyOfCart = [...props.cart]; // Create a copy of the cart\r\n    let existingItemIndex = copyOfCart.findIndex((cartItem) => cartItem.id === item.id);\r\n\r\n    if (existingItemIndex !== -1) {\r\n      copyOfCart[existingItemIndex].quantity += 1; // Increase quantity\r\n      props.setCart(copyOfCart); // Update the cart state\r\n    } else {\r\n      const newItem = { ...item, quantity: 1 }; // Start quantity at 1\r\n      props.setCart([...copyOfCart, newItem]); // Add new item to cart\r\n    }*/\r\n      if (!username) {\r\n        alert(\"please login first\");\r\n        navigate(\"/form\");\r\n    } else {\r\n        const itemData = {\r\n            itemId: item.id,\r\n            itemUrl: item.url,\r\n            itemDescription: item.description,\r\n            itemName: item.name,\r\n            itemQuantity: item.quantity,\r\n            itemPrice: item.price,\r\n            itemOwnerEmail: username.user.name\r\n        };\r\n        console.log(itemData);\r\n\r\n        try {\r\n            const res = fetch(\"http://localhost:7600/api/addToCart\", {\r\n                method: \"POST\",  // Ensure the method is POST\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(itemData)\r\n            }); // Semicolon added here\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n  };\r\n\r\n  // Handle comment form submission\r\n  const handleSubmit = async (e) => {\r\n    const like = 0\r\n    e.preventDefault();\r\n\r\n    const commentData = {\r\n      name: username.user.name,\r\n      itemId: numericId, // Use the numeric ID here\r\n      comment: newComment,\r\n      numberoflikes:like\r\n    };\r\n\r\n    console.log(commentData)\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:7600/comment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(commentData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setNewComment(''); // Clear the comment input after successful submission\r\n        // fetchComments(); // Re-fetch the comments after adding a new one\r\n      } else {\r\n        throw new Error('Failed to post comment');\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error posting the comment:', error);\r\n    }\r\n  };\r\n\r\n  // Show a loading indicator if still fetching data\r\n  if (!item) {\r\n    return <div>Loading item...</div>;\r\n  }\r\n\r\n  function deletecomment(index){\r\n    \r\n    const deletecommentdata = {comment:filteredComments[index].comment,username:filteredComments[index].name}\r\n\r\n\r\n    try{\r\n      fetch('http://localhost:7600/deletecomment',{\r\n        method:\"Post\",headers:{\r\n          'Content-type':'Application/json'\r\n        },body:JSON.stringify(deletecommentdata)\r\n      })\r\n\r\n      alert(\"comment deleted\")\r\n      \r\n    }catch(error){\r\n\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  function giveLike(index){\r\n        alert(filteredComments[index])\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={modeStyle}>\r\n      <img src={item.Bigimage} alt={item.name} className=\"item-image\" />\r\n      <div className=\"item-details\">\r\n        <h1 className=\"item-title\">{item.name}</h1>\r\n        <p className=\"item-price\"><strong>Price:</strong> ₹{item.price}</p>\r\n        <p className=\"item-description\">{item.description}</p>\r\n        <button className=\"add-to-cart\" onClick={handleAddToCart}>\r\n          Add to Cart\r\n        </button>\r\n\r\n        {item.specifications && (\r\n          <div className=\"specifications\">\r\n            <h2>Specifications</h2>\r\n            <table className=\"specifications-table\">\r\n              <tbody>\r\n                {Object.entries(item.specifications).map(([key, value]) => (\r\n                  <tr key={key}>\r\n                    <td>{key.charAt(0).toUpperCase() + key.slice(1)}:</td>\r\n                    <td>{Array.isArray(value) ? value.join(', ') : value}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Comment Section */}\r\n      <div className=\"comments-section\">\r\n        <h2>Reviews</h2>\r\n        {/* Display comments */}\r\n        <div className=\"comments-list\">\r\n          {filteredComments.length > 0 ? (\r\n            filteredComments.map((comment, index) => (\r\n              <div key={index} className=\"comment\">\r\n                <p><b>{comment.name}:</b> {comment.comment}</p>\r\n                <p id=\"viewson\"><i>views on:</i> {item.name}</p>\r\n                {\r\n                  comment.name===username.user.name?<button onClick={()=>{\r\n                    deletecomment(index)\r\n                  }}>delete</button>:<p></p>\r\n                }\r\n                {\r\n                  comment.name === username.user.name?<p></p>:<button onClick={()=>{\r\n                    giveLike(index)\r\n                  }}>Like</button>\r\n                }\r\n                <p>{comment.numberoflikes}</p>\r\n                \r\n                \r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No comments yet.</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Comment Form */}\r\n        <form\r\n          className=\"comment-form\"\r\n          onSubmit={(e) => {\r\n            if (!username) {\r\n              alert(\"Please log in first\");\r\n              navigate(\"/form\");\r\n            } else {\r\n              handleSubmit(e);\r\n            }\r\n          }}\r\n        >\r\n          \r\n          <input\r\n            type=\"text\"\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder={`Comment as ${!username ? \"user\" : username.user.name}`}\r\n            required\r\n          />\r\n          \r\n          <button type=\"submit\">Submit Comment</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}